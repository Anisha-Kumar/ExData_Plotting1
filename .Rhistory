rowIndex <- 18:23
dat <- read.xlsx("xls/dataXXls.xlsx",sheetIndex=1,header=TRUE,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
R.version.string
install.packages("swirl")
library(swirl)
ls()
rm(list=ls(0))
rm(list=ls())
swirl()
5+7
x<-5+7
x
y <- x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
swirl9
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("/testdir")
?setwd
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
?file.rename
args(file.rename)
file.rename("mytest.R","mytest2.R")
args(file.copy)
play()
args(file.copy)
nxt()
file.copy("mytest2.R","mytest3.R")
play()
?file.path()
file.path("mytest3.R")
nxt()
file.path("mytest3.R")
file.path("folder1","folder1")
info()
file.path("folder1","folder2")
?dir.create
dir.create(file("testdir2","testdir3"),recursive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2" recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
bye()
cube <- function(x,n)
x^3
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("httr")
install.packages("httpuv")
library(swirl)
install.packages("swirl")
install_from_swirl("Getting and Cleaning Data")
libary(swirl)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(df)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
bye()
library(swirl)
swirl()
-(5:20)
select(cran,-(1:11))
select(cran,-(x:11))
select(cran,-(X:11))
select(cran,-(X:size))
play()
cran
nxt()
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country =="US")
?Comparison
filter(cran, r_version<="3.0.2", country =="India")
filter(cran, r_version<="3.0.2", country =="IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<- select(cran, X:ip_id)
cran2<- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id,package, size)
cran3 <- select(cran, ip_id,package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate (cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
crab=n <- tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc (count))
View (top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique>465)
View (top_unique)
top_unique_sorted <- arrange(top_Unique, desc (unique))
top_unique_sorted <- arrange(top_unique, desc (unique))
View (top_unique_sorted)
submit()
submit()
submit()
View (result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
gather(students, sex_class, count, -grade)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(res,sex_class, c("sex", "class"))
submit()
students3
submit()
submit()
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread()
?spread
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
?mutate
bye()
Data <- data.set(
vote = sample(c(1,2,3,8,9,97,99),size=300,replace=TRUE),
region = sample(c(rep(1,3),rep(2,2),3,99),size=300,replace=TRUE),
income = exp(rnorm(300,sd=.7))*2000
)
Data <- within(Data,{
description(vote) <- "Vote intention"
description(region) <- "Region of residence"
description(income) <- "Household income"
wording(vote) <- "If a general election would take place next tuesday,
the candidate of which party would you vote for?"
wording(income) <- "All things taken into account, how much do all
household members earn in sum?"
foreach(x=c(vote,region),{
measurement(x) <- "nominal"
})
measurement(income) <- "ratio"
labels(vote) <- c(
Conservatives         =  1,
Labour                =  2,
"Liberal Democrats"   =  3,
"Don't know"          =  8,
"Answer refused"      =  9,
"Not applicable"      = 97,
"Not asked in survey" = 99)
labels(region) <- c(
England               =  1,
Scotland              =  2,
Wales                 =  3,
"Not applicable"      = 97,
"Not asked in survey" = 99)
foreach(x=c(vote,region,income),{
annotation(x)["Remark"] <- "This is not a real survey item, of course ..."
})
missing.values(vote) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
codebook(Data)
install.packages("Knittr")
install.packages("Knitr")
install.packages("knitr")
library(knitr)
Data <- data.set(
vote = sample(c(1,2,3,8,9,97,99),size=300,replace=TRUE),
region = sample(c(rep(1,3),rep(2,2),3,99),size=300,replace=TRUE),
income = exp(rnorm(300,sd=.7))*2000
)
Data <- within(Data,{
description(vote) <- "Vote intention"
description(region) <- "Region of residence"
description(income) <- "Household income"
wording(vote) <- "If a general election would take place next tuesday,
the candidate of which party would you vote for?"
wording(income) <- "All things taken into account, how much do all
household members earn in sum?"
foreach(x=c(vote,region),{
measurement(x) <- "nominal"
})
measurement(income) <- "ratio"
labels(vote) <- c(
Conservatives         =  1,
Labour                =  2,
"Liberal Democrats"   =  3,
"Don't know"          =  8,
"Answer refused"      =  9,
"Not applicable"      = 97,
"Not asked in survey" = 99)
labels(region) <- c(
England               =  1,
Scotland              =  2,
Wales                 =  3,
"Not applicable"      = 97,
"Not asked in survey" = 99)
foreach(x=c(vote,region,income),{
annotation(x)["Remark"] <- "This is not a real survey item, of course ..."
})
missing.values(vote) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
Data
install.packages("memisc")
library(memisc)
Data <- data.set(
vote = sample(c(1,2,3,8,9,97,99),size=300,replace=TRUE),
region = sample(c(rep(1,3),rep(2,2),3,99),size=300,replace=TRUE),
income = exp(rnorm(300,sd=.7))*2000
)
Data <- within(Data,{
description(vote) <- "Vote intention"
description(region) <- "Region of residence"
description(income) <- "Household income"
wording(vote) <- "If a general election would take place next tuesday,
the candidate of which party would you vote for?"
wording(income) <- "All things taken into account, how much do all
household members earn in sum?"
foreach(x=c(vote,region),{
measurement(x) <- "nominal"
})
measurement(income) <- "ratio"
labels(vote) <- c(
Conservatives         =  1,
Labour                =  2,
"Liberal Democrats"   =  3,
"Don't know"          =  8,
"Answer refused"      =  9,
"Not applicable"      = 97,
"Not asked in survey" = 99)
labels(region) <- c(
England               =  1,
Scotland              =  2,
Wales                 =  3,
"Not applicable"      = 97,
"Not asked in survey" = 99)
foreach(x=c(vote,region,income),{
annotation(x)["Remark"] <- "This is not a real survey item, of course ..."
})
missing.values(vote) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
codebook(Data)
data1 <- read.table(file ="household_power_consumption.txt", Date="01/02/2007"|Date="01/02/2007",header = TRUE)
Names <- read.table(file ="household_power_consumption.txt", nrows = 1, header = FALSE)
Names <- read.table("household_power_consumption.txt", nrows = 1, header = FALSE)
setInternet2(use = TRUE)
unzip(zipfile="exdata_data_household_power_consumption.zip")
Names <- read.table("household_power_consumption.txt", nrows = 1, header = FALSE)
getwd()
setwd("C:/Users/akumar/Desktop/myFirstRepo/datasciencecoursera")
Names <- read.table("household_power_consumption.txt", nrows = 1, header = FALSE)
Names
Data1 <- read.table("household_power_consumption.txt",  header = TRUE, Names$Date="01/02/2007")
fileName <- "household_power_consumption.txt"
Data1 <- read.table(fileName$Date="01/02/2007",  header = TRUE)
Data1 <- read.table(fileName,nrows = 2)
Data1
dat <- filename$Date == "01/02/2007"
dat <- Data1$Date == "01/02/2007"
dat
Lines <- readLines(textConnection(Lines.raw))
Lines <- grep("01/02/2007", Lines, value = TRUE)
read.table(textConnection(Lines), header = TRUE)
Lines <- readLines(textConnection(fileName))
Lines <- grep("01/02/2007", Lines, value = TRUE)
read.table(textConnection(Lines), header = TRUE)
Data1 <- read.table(scan(file = fileName,what = list(Date="01/02/2007",Time ="",Global_active_power="",Global_reactive_power="",Voltage="",Global_intensity="",Sub_metering_1="",Sub_metering_2="",Sub_metering_3="")),Header=TRUE)
Data1 <- read.table(scan(file = fileName,what = list(Date="01/02/2007",Time ="",Global_active_power="",Global_reactive_power="",Voltage="",Global_intensity="",Sub_metering_1="",Sub_metering_2="",Sub_metering_3="")))
View(Data1)
View(Data1)
unzip(zipfile="exdata_data_household_power_consumption.zip")
fileName <- "household_power_consumption.txt"
Data1 <- read.table(scan(file = fileName,what = list(Date="01/02/2007",Time ="",Global_active_power="",Global_reactive_power="",Voltage="",Global_intensity="",Sub_metering_1="",Sub_metering_2="",Sub_metering_3="")))
unzip(zipfile="exdata_data_household_power_consumption.zip")
Data1 <- read.table(scan(file = "household_power_consumption.txt",what = list(Date="01/02/2007",Time ="",Global_active_power="",Global_reactive_power="",Voltage="",Global_intensity="",Sub_metering_1="",Sub_metering_2="",Sub_metering_3="")))
setwd("C:/Users/akumar/Desktop/myFirstRepo/datasciencecoursera")
setwd("C:/Users/akumar/ExData_Plotting1")
library(lubridate)
library(data.table)
setwd("C:/Users/akumar/ExData_Plotting1")
unzip(zipfile="exdata_data_household_power_consumption.zip")
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?')
data1 <- data1[data1$Date=="01/02/2007"|data1$Date=="02/02/2007",]
View(data1)
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?')
data1 <- data1[data1$Date=="1/2/2007"|data1$Date=="2/2/2007",]
View(data1)
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?')
data1 <- data1[data1$Date=="2/2/2007",]
View(data1)
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?')
data1 <- data1[data1$Date=="2/2/2007" | data1$Date=="1/2/2007" ,]
View(data1)
tail(data1)
data1$Date <- dmy(data1$Date)
View(data1)
data1$Time <- hms(data1$Time)
View(data1)
Class(data1$Time)
class(data1$Time)
hist(data1$Global_active_power)
hist(data1$Global_active_power, col="red")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
png("plot1.png",width="480", height = "480",units = "px")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png("plot1.png",width="480", height = "480",units = "1")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png("plot1.png",width="480", height = "480",units = "px")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png("plot1.png",width= 480, height = 480,units = "px")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png("plot1.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
plot(wday(data1$Date),data1$Global_active_power))
plot(wday(data1$Date),data1$Global_active_power)
example(points)
plot(wday(data1$Date),data1$Global_active_power,type=1)
plot(wday(data1$Date),data1$Global_active_power,type="1")
plot(wday(data1$Date),data1$Global_active_power,type='1')
plot(wday(data1$Date),data1$Global_active_power,pch='1')
library(dplyr)
mutate(data1,"weekday",wday(data1$Date))
View(data1)
mutate(data1,wday(data1$Date, label=TRUE))
data1 <- mutate(data1,wday(data1$Date, label=TRUE))
View(data1)
data1 <- mutate(data1,weekday=wday(data1$Date, label=TRUE))
View(data1)
plot(data1$weekday,data1$Global_active_power,pch='1')
plot(data1$weekday,data1$Global_active_power,pch='3')
plot(data1$weekday,data1$Global_active_power,pch=3)
plot(data1$weekday,data1$Global_active_power,pch =1)
plot(data1$weekday,data1$Global_active_power, type=1)
plot(data1$weekday,data1$Global_active_power, type=1)
plot(data1$weekday,data1$Global_active_power, type='1')
varclass<-c(rep('character',2),rep('numeric',7))
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?', colClasses=varclass)
data1 <- data1[data1$Date=="2/2/2007" | data1$Date=="1/2/2007" ,]
png("plot1.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
png("plot1.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
View(data1)
data1 <- mutate(data1,DateTime=dmy(data1$Date)+hms(data1$Time))
View(data1)
data1 <- mutate(data1,Weekday=wday(data1$DateTime, label=TRUE))
View(data1)
summary(data1$Weekday)
plot(as.POSIXlt(data1$DateTime),data1$Global_active_power, type='1')
plot(data1$DateTime,data1$Global_active_power)
plot(data1$DateTime,data1$Global_active_power,type=1)
plot(data1$DateTime,data1$Global_active_power,type='1')
plot(data1$DateTime,data1$Global_active_power)
plot(data1$DateTime,data1$Global_active_power,pch=1)
plot(data1$DateTime,data1$Global_active_power,pch=2)
plot(data1$DateTime,data1$Global_active_power,pch=3)
plot(data1$DateTime,data1$Global_active_power,pch=4)
line(data1$DateTime,data1$Global_active_power)
plot(data1$DateTime,data1$Global_active_power,line)
?plot
plot(data1$DateTime,data1$Global_active_power,type="l")
plot(data1$Weekday,data1$Global_active_power,type="l")
plot(data1$DateTime,data1$Global_active_power,type="l")
plot(data1$Date,data1$Global_active_power,type="l")
data1$Date <-dmy(data1$Date)
plot(data1$Date,data1$Global_active_power,type="l")
View(data1)
plot(data1$DateTime,data1$Global_active_power,type="l")
png("plot1.png",width= 480, height = 480,units = "px")
plot(data1$DateTime,data1$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
par(bg = "transparent")
dev.off()
library(lubridate)
library(dplyr)
unzip(zipfile="exdata_data_household_power_consumption.zip")
varclass<-c(rep('character',2),rep('numeric',7))
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?', colClasses=varclass)
data1 <- data1[data1$Date=="2/2/2007" | data1$Date=="1/2/2007" ,]
png("plot1.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
data1 <- mutate(data1,DateTime=dmy(data1$Date)+hms(data1$Time))
png("plot2.png",width= 480, height = 480,units = "px")
plot(data1$DateTime,data1$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
par(bg = "transparent")
png("plot1.png",width= 480, height = 480,units = "px")
dev.off()
data1 <- read.table("household_power_consumption.txt",header=TRUE,sep=';',na.strings='?', colClasses=varclass)
data1 <- data1[data1$Date=="2/2/2007" | data1$Date=="1/2/2007" ,]
png("plot1.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
hist(data1$Global_active_power, col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
data1 <- mutate(data1,DateTime=dmy(data1$Date)+hms(data1$Time))
png("plot2.png",width= 480, height = 480,units = "px")
par(bg = "transparent")
plot(data1$DateTime,data1$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
par(bg = "transparent")
dev.off()
